// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package delete is a generated GoMock package.
package delete

import (
	context "context"
	article "github.com/dipress/crmifc/internal/article"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRepository is a mock of Repository interface
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// FindArticle mocks base method
func (m *MockRepository) FindArticle(ctx context.Context, id int) (*article.Article, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindArticle", ctx, id)
	ret0, _ := ret[0].(*article.Article)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindArticle indicates an expected call of FindArticle
func (mr *MockRepositoryMockRecorder) FindArticle(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindArticle", reflect.TypeOf((*MockRepository)(nil).FindArticle), ctx, id)
}

// DeleteArticle mocks base method
func (m *MockRepository) DeleteArticle(ctx context.Context, id int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteArticle", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteArticle indicates an expected call of DeleteArticle
func (mr *MockRepositoryMockRecorder) DeleteArticle(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteArticle", reflect.TypeOf((*MockRepository)(nil).DeleteArticle), ctx, id)
}
